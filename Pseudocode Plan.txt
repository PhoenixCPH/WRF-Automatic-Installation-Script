Pseudocode Plan
1. Initialize script environment
   - Set up logging
   - Define color codes for better readability
   - Define utility functions for messaging, error handling, etc.

2. Detect system environment
   - Identify OS (Ubuntu/Debian, CentOS/RHEL, macOS, Windows/WSL)
   - Check CPU architecture
   - Detect available compilers (gcc, ifort, etc.)
   - Check for existing MPI implementations
   - Check for required libraries (NetCDF, HDF5, etc.)
   - Verify available disk space and memory

3. Define prerequisites installation function for each supported OS
   - Ubuntu/Debian: apt-based installation
   - CentOS/RHEL: yum-based installation
   - macOS: homebrew-based installation
   - Windows: WSL-based guidance

4. Environment setup functions
   - Create and configure environment variables
   - Verify paths and permissions
   - Set up compiler options

5. WRF download and extraction functions
   - Download appropriate WRF version
   - Extract source files
   - Download and extract WPS if needed

6. Configuration functions
   - Detect optimal configuration based on system
   - Run WRF configure with appropriate options
   - Handle user input for specialized configurations

7. Compilation functions
   - Compile WRF with appropriate parallel settings
   - Verify successful compilation
   - Compile WPS if requested

8. Verification and testing functions
   - Verify installation by checking for executables
   - Run basic tests to ensure functionality

9. Error handling and diagnostics
   - Capture and analyze errors during installation
   - Provide detailed error messages with suggested solutions
   - Implement automated troubleshooting for common issues

10. Main function to orchestrate the installation process
    - Present welcome information
    - Execute each step with error checking
    - Provide progress updates
    - Present final success or failure information